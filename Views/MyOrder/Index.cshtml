@model IEnumerable<productManagement.Models.Order>

@{
    ViewData["Title"] = "My Orders";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />

<div class="container mt-5">
    <h2 class="text-center mb-4">🧾 My Orders</h2>

    @if (!Model.Any())
    {
        <div class="alert alert-info text-center">You haven't placed any orders yet.</div>
    }
    else
    {
        <table class="table table-bordered table-hover text-center">
            <thead class="table-dark">
                <tr>
                    <th scope="col">Order ID</th>
                    <th scope="col">Product ID</th>
                    <th scope="col">Product Name</th>
                    <th scope="col">Quantity</th>
                    <th scope="col">Order Date</th>
                </tr>
            </thead>
            <tbody id="ordersTable">
                @foreach (var order in Model)
                {
                    <tr>
                        <td>@order.Id</td>
                        <td>@order.ProductId</td>
                        <td>@order.Product?.Name</td>
                        <td>@order.Quantity</td>
                        <td>@order.OrderDate.ToString("yyyy-MM-dd HH:mm")</td>
                    </tr>
                }
            </tbody>
        </table>

        <nav>
            <ul class="pagination justify-content-center" id="pagination"></ul>
        </nav>
    }
</div>

@section Scripts {
    <script>
        const rowsPerPage = 5;
        const table = document.getElementById('ordersTable');
        const rows = table.getElementsByTagName('tr');
        const pagination = document.getElementById('pagination');
        const totalPages = Math.ceil(rows.length / rowsPerPage);

        function showPage(page) {
            const start = (page - 1) * rowsPerPage;
            const end = start + rowsPerPage;

            for (let i = 0; i < rows.length; i++) {
                rows[i].style.display = (i >= start && i < end) ? '' : 'none';
            }

            pagination.innerHTML = '';
            for (let i = 1; i <= totalPages; i++) {
                const li = document.createElement('li');
                li.className = 'page-item' + (i === page ? ' active' : '');

                const link = document.createElement('a');
                link.className = 'page-link';
                link.href = '#';
                link.innerText = i;
                link.onclick = function () {
                    showPage(i);
                    return false;
                };

                li.appendChild(link);
                pagination.appendChild(li);
            }
        }

        showPage(1);
    </script>
}
